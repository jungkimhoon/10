package swing;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Paint;
import java.util.ArrayList;


public class DrCanvas extends Canvas{
	private int x1,x2,y1,y2, btn, col;
	private MsPaint msPaint;
	private int shape, fill;
	
	
	public DrCanvas(MsPaint msPaint) {
		this.msPaint = msPaint;
		this.setBackground(new Color(255,200,255));
	}
	

	@Override
	public void paint(Graphics g) {
		ArrayList<ShapeDTO> list = new ArrayList<ShapeDTO>();
			
		int x1 = Integer.parseInt(msPaint.getX1T().getText().trim());
		int y1 = Integer.parseInt(msPaint.getY1T().getText().trim());
		int x2 = Integer.parseInt(msPaint.getX2T().getText().trim());
		int y2 = Integer.parseInt(msPaint.getY2T().getText().trim());
		int z1 = Integer.parseInt(msPaint.getZ1T().getText().trim());
		int z2 = Integer.parseInt(msPaint.getZ2T().getText().trim());
		
		
		switch(msPaint.getCombo().getSelectedIndex()) {
		case 0 : g.setColor(new Color(0,0,0)); col=0; break;
		case 1 : g.setColor(new Color(255,128,0)); col=1; break;
		case 2 : g.setColor(new Color(255,255,0)); col=2; break;
		case 3 : g.setColor(new Color(0,255,0)); col=3; break;
		case 4 : g.setColor(new Color(0,0,255)); col=4; break;
		case 5 : g.setColor(new Color(36,46,220)); col=5; break;
		case 6 : g.setColor(new Color(109,53,202)); col=6; break;
		}
		
		
		if(msPaint.getFill().isSelected()) {//채워진 도형
			if(msPaint.getLine().isSelected()) {
				shape = 1; fill = 1;
				g.drawLine(x1, y1, x2, y2);
			}
			else if(msPaint.getCircle().isSelected()) {
				shape = 2; fill = 1;
				g.fillOval(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x2-x1), Math.abs(y2-y1));
			}
			else if(msPaint.getRect().isSelected()) {
				shape = 3; fill = 1;
				g.fillRect(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x2-x1), Math.abs(y2-y1));
			}
			else if(msPaint.getRounRect().isSelected()) {
				shape = 4; fill = 1;
				g.fillRoundRect(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x2-x1), Math.abs(y2-y1),z1,z2);
			}
			
		}else {//빈 도형
			if(msPaint.getLine().isSelected()) {
				shape = 1; fill = 0;
				g.drawLine(x1, y1, x2, y2);
			}
			else if(msPaint.getCircle().isSelected()) {
				shape = 2; fill = 0;
				g.drawOval(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x2-x1), Math.abs(y2-y1));
			}
			else if(msPaint.getRect().isSelected()) {
				shape = 3; fill = 0;
				g.drawRect(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x2-x1), Math.abs(y2-y1));
			}
			else if(msPaint.getRounRect().isSelected()) {
				shape = 4; fill = 0;
				g.drawRoundRect(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x2-x1), Math.abs(y2-y1),z1,z2);
			}
		}

	}
			
			
			


	public void setX1(int x1) {
		this.x1 = x1;
	}

	public void setX2(int x2) {
		this.x2 = x2;
	}

	public void setY1(int y1) {
		this.y1 = y1;
	}

	public void setY2(int y2) {
		this.y2 = y2;
	}
	public void setbtn(int btn) {
		this.btn = btn;
	}

	public void setCol(int col) {
		this.col = col;
	}
	
}