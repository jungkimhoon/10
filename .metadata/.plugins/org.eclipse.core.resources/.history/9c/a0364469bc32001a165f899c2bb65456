package thread;

import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Packman extends Frame implements KeyListener, Runnable{
	private Image img, food;
	private int sel = 2;
	private int mx, my;
	private int x=225, y=225;
	private int[] mukx = new int[5];
	private int[] muky = new int[5];

	public Packman() {
		img = Toolkit.getDefaultToolkit().getImage("packman.jpg");
		food = Toolkit.getDefaultToolkit().getImage("godol.jpg");
		for(int i=0; i<5; i++) {
			mukx[i] = (int)(Math.random()*440)+30;
			muky[i] = (int)(Math.random()*440)+30;
			System.out.println("mx = " + mukx[i]+" my = "+muky[i]);
		}
		
		setTitle("팩맨");
		setBounds(300,300,500,500);
		setVisible(true);
		setResizable(false);
		
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				// TODO Auto-generated method stub
				System.exit(0);
			}
		});
		
		this.addKeyListener(this); //인터페이스 설정 후 이벤트 필수
		
		Thread t = new Thread(this);
		t.start();
		
	}
	
	@Override
	public void paint(Graphics g) {
		
		for(int i=0; i<5; i++) {
			g.drawImage(food, mukx[i], muky[i],this);
		}
	
		g.drawImage(img, 
				x, y, x+50, y+50, //화면 위치
				sel*50, 0, sel*50+50, 50, //원하는 이미지 위치
				this);
		
		for(int i=0; i<5; i++) {
			if( x > mukx[i]-20 && x < mukx[i] + 20 && y > mukx[i]-20 && y < mukx[i] + 20 ) {
				mukx[i] = -100;
				muky[i] = -100;
				repaint();
				System.out.println("x = "+x+"y ="+y);
				break;
			}
		}
		
	}
	
	@Override
	public void run() {
		while(true) {
			if(sel%2 == 0) sel++;
			else sel--;
			x+=mx;
			y+=my;
			if(x>500) x=0;
			else if(x<0) x=500;
			if(y>500) y=0;
			else if(y<0) y=500;
			
		
			
			try {
				Thread.sleep(50);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			repaint();
		}
		
	}


	@Override
	public void keyPressed(KeyEvent e) {
		if( e.getKeyCode() == KeyEvent.VK_ESCAPE ) System.exit(0);
		
		else if(e.getKeyCode() == KeyEvent.VK_LEFT) {
			sel = 0; 
			mx -= 10; my = 0;
		}
		else if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			sel = 2; 	
			mx += 10; my = 0;
		}
		else if(e.getKeyCode() == KeyEvent.VK_UP) {
			sel = 4; 		
			mx = 0; my -= 10;
		}
		else if(e.getKeyCode() == KeyEvent.VK_DOWN) {
			sel = 6;
			mx = 0; my += 10;
		}
		
		repaint();
	}

	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		
		
		
	}

	@Override
	public void keyTyped(KeyEvent e) {
	
		
	}

	public static void main(String[] args) {
		new Packman();
	}

}
